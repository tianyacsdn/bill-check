<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinochem.mapper.AcpsBalanceTransDtlMapper">
  <resultMap id="BaseResultMap" type="com.sinochem.domain.AcpsBalanceTransDtl">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="sino_chem_trade_id" jdbcType="VARCHAR" property="sinoChemTradeId" />
    <result column="sino_chem_order_id" jdbcType="VARCHAR" property="sinoChemOrderId" />
    <result column="cust_id" jdbcType="BIGINT" property="custId" />
    <result column="tran_remark" jdbcType="VARCHAR" property="tranRemark" />
    <result column="tran_amt" jdbcType="DECIMAL" property="tranAmt" />
    <result column="available_balance" jdbcType="DECIMAL" property="availableBalance" />
    <result column="pending_payment_balance" jdbcType="DECIMAL" property="pendingPaymentBalance" />
    <result column="available_draw_balance" jdbcType="DECIMAL" property="availableDrawBalance" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sino_chem_trade_id, sino_chem_order_id, cust_id, tran_remark, tran_amt, available_balance, 
    pending_payment_balance, available_draw_balance, remark, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.sinochem.domain.AcpsBalanceTransDtlExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from acps_balance_trans_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from acps_balance_trans_dtl
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from acps_balance_trans_dtl
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sinochem.domain.AcpsBalanceTransDtlExample">
    delete from acps_balance_trans_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sinochem.domain.AcpsBalanceTransDtl">
    insert into acps_balance_trans_dtl (id, sino_chem_trade_id, sino_chem_order_id, 
      cust_id, tran_remark, tran_amt, 
      available_balance, pending_payment_balance, 
      available_draw_balance, remark, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{sinoChemTradeId,jdbcType=VARCHAR}, #{sinoChemOrderId,jdbcType=VARCHAR}, 
      #{custId,jdbcType=BIGINT}, #{tranRemark,jdbcType=VARCHAR}, #{tranAmt,jdbcType=DECIMAL}, 
      #{availableBalance,jdbcType=DECIMAL}, #{pendingPaymentBalance,jdbcType=DECIMAL}, 
      #{availableDrawBalance,jdbcType=DECIMAL}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.sinochem.domain.AcpsBalanceTransDtl">
    insert into acps_balance_trans_dtl
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sinoChemTradeId != null">
        sino_chem_trade_id,
      </if>
      <if test="sinoChemOrderId != null">
        sino_chem_order_id,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="tranRemark != null">
        tran_remark,
      </if>
      <if test="tranAmt != null">
        tran_amt,
      </if>
      <if test="availableBalance != null">
        available_balance,
      </if>
      <if test="pendingPaymentBalance != null">
        pending_payment_balance,
      </if>
      <if test="availableDrawBalance != null">
        available_draw_balance,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sinoChemTradeId != null">
        #{sinoChemTradeId,jdbcType=VARCHAR},
      </if>
      <if test="sinoChemOrderId != null">
        #{sinoChemOrderId,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=BIGINT},
      </if>
      <if test="tranRemark != null">
        #{tranRemark,jdbcType=VARCHAR},
      </if>
      <if test="tranAmt != null">
        #{tranAmt,jdbcType=DECIMAL},
      </if>
      <if test="availableBalance != null">
        #{availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="pendingPaymentBalance != null">
        #{pendingPaymentBalance,jdbcType=DECIMAL},
      </if>
      <if test="availableDrawBalance != null">
        #{availableDrawBalance,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sinochem.domain.AcpsBalanceTransDtlExample" resultType="java.lang.Integer">
    select count(*) from acps_balance_trans_dtl
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update acps_balance_trans_dtl
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.sinoChemTradeId != null">
        sino_chem_trade_id = #{record.sinoChemTradeId,jdbcType=VARCHAR},
      </if>
      <if test="record.sinoChemOrderId != null">
        sino_chem_order_id = #{record.sinoChemOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.custId != null">
        cust_id = #{record.custId,jdbcType=BIGINT},
      </if>
      <if test="record.tranRemark != null">
        tran_remark = #{record.tranRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.tranAmt != null">
        tran_amt = #{record.tranAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.availableBalance != null">
        available_balance = #{record.availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.pendingPaymentBalance != null">
        pending_payment_balance = #{record.pendingPaymentBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.availableDrawBalance != null">
        available_draw_balance = #{record.availableDrawBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update acps_balance_trans_dtl
    set id = #{record.id,jdbcType=BIGINT},
      sino_chem_trade_id = #{record.sinoChemTradeId,jdbcType=VARCHAR},
      sino_chem_order_id = #{record.sinoChemOrderId,jdbcType=VARCHAR},
      cust_id = #{record.custId,jdbcType=BIGINT},
      tran_remark = #{record.tranRemark,jdbcType=VARCHAR},
      tran_amt = #{record.tranAmt,jdbcType=DECIMAL},
      available_balance = #{record.availableBalance,jdbcType=DECIMAL},
      pending_payment_balance = #{record.pendingPaymentBalance,jdbcType=DECIMAL},
      available_draw_balance = #{record.availableDrawBalance,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sinochem.domain.AcpsBalanceTransDtl">
    update acps_balance_trans_dtl
    <set>
      <if test="sinoChemTradeId != null">
        sino_chem_trade_id = #{sinoChemTradeId,jdbcType=VARCHAR},
      </if>
      <if test="sinoChemOrderId != null">
        sino_chem_order_id = #{sinoChemOrderId,jdbcType=VARCHAR},
      </if>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=BIGINT},
      </if>
      <if test="tranRemark != null">
        tran_remark = #{tranRemark,jdbcType=VARCHAR},
      </if>
      <if test="tranAmt != null">
        tran_amt = #{tranAmt,jdbcType=DECIMAL},
      </if>
      <if test="availableBalance != null">
        available_balance = #{availableBalance,jdbcType=DECIMAL},
      </if>
      <if test="pendingPaymentBalance != null">
        pending_payment_balance = #{pendingPaymentBalance,jdbcType=DECIMAL},
      </if>
      <if test="availableDrawBalance != null">
        available_draw_balance = #{availableDrawBalance,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sinochem.domain.AcpsBalanceTransDtl">
    update acps_balance_trans_dtl
    set sino_chem_trade_id = #{sinoChemTradeId,jdbcType=VARCHAR},
      sino_chem_order_id = #{sinoChemOrderId,jdbcType=VARCHAR},
      cust_id = #{custId,jdbcType=BIGINT},
      tran_remark = #{tranRemark,jdbcType=VARCHAR},
      tran_amt = #{tranAmt,jdbcType=DECIMAL},
      available_balance = #{availableBalance,jdbcType=DECIMAL},
      pending_payment_balance = #{pendingPaymentBalance,jdbcType=DECIMAL},
      available_draw_balance = #{availableDrawBalance,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insertBatch" keyProperty="id" parameterType="java.util.List" useGeneratedKeys="true">
    insert into acps_balance_trans_dtl (id, sino_chem_trade_id, sino_chem_order_id,
    cust_id, tran_remark, tran_amt,
    available_balance, pending_payment_balance,
    available_draw_balance, remark, create_time,
    update_time)
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.sinoChemTradeId,jdbcType=VARCHAR}, #{item.sinoChemOrderId,jdbcType=VARCHAR},
      #{item.custId,jdbcType=BIGINT}, #{item.tranRemark,jdbcType=VARCHAR}, #{item.tranAmt,jdbcType=DECIMAL},
      #{item.availableBalance,jdbcType=DECIMAL}, #{item.pendingPaymentBalance,jdbcType=DECIMAL},
      #{item.availableDrawBalance,jdbcType=DECIMAL}, #{item.remark,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP},
      #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
</mapper>